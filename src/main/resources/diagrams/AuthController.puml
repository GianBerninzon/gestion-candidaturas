@startuml
title EmpresaControllerTest - Flujo de Pruebas

participant "Test" as Test
participant "EmpresaController" as EmpresaCtrl
participant "EmpresaService" as EmpresaSvc
participant "UserService" as UserSvc
participant "SecurityConfig" as Security

== RF-01: Obtener Todas las Empresas ==

Test -> EmpresaCtrl: GET /api/empresas [USER Autenticado]
activate EmpresaCtrl
EmpresaCtrl -> EmpresaSvc: getAllEmpresas()
EmpresaSvc --> EmpresaCtrl: List<Empresa>(1 elemento)
EmpresaCtrl --> Test: 200 OK + JSON
deactivate EmpresaCtrl

== RF-02: Obtener Empresa por ID ==

Test -> EmpresaCtrl: GET /api/empresas/1 [Existente]
activate EmpresaCtrl
EmpresaCtrl -> EmpresaSvc: getEmpresaById(1L)
EmpresaSvc --> EmpresaCtrl: Optional<Empresa>
EmpresaCtrl --> Test: 200 OK + Detalles
deactivate EmpresaCtrl

Test -> EmpresaCtrl: GET /api/empresas/99 [Inexistente]
activate EmpresaCtrl
EmpresaCtrl -> EmpresaSvc: getEmpresaById(99L)
EmpresaSvc --> EmpresaCtrl: Optional.empty()
EmpresaCtrl --> Test: 404 Not Found
deactivate EmpresaCtrl

== RF-03: Crear Empresa ==

Test -> Security: mockAuthentication(USER/ADMIN)
activate Security
Security --> Test: Contexto actualizado
deactivate Security

Test -> EmpresaCtrl: POST /api/empresas [Autenticado]
activate EmpresaCtrl
EmpresaCtrl -> EmpresaSvc: saveEmpresa()
EmpresaSvc --> EmpresaCtrl: Empresa creada
EmpresaCtrl --> Test: 200 OK + ID
deactivate EmpresaCtrl

Test -> EmpresaCtrl: POST /api/empresas [No Autenticado]
activate EmpresaCtrl
EmpresaCtrl -> Security: Verificar autenticación
Security --> EmpresaCtrl: Acceso denegado
EmpresaCtrl --> Test: 403 Forbidden
deactivate EmpresaCtrl

== RF-04: Actualizar Empresa ==

Test -> EmpresaCtrl: PUT /api/empresas/1 [ADMIN]
activate EmpresaCtrl
EmpresaCtrl -> EmpresaSvc: getEmpresaById(1L)
EmpresaSvc --> EmpresaCtrl: Empresa existente
EmpresaCtrl -> EmpresaSvc: saveEmpresa()
EmpresaSvc --> EmpresaCtrl: Empresa actualizada
EmpresaCtrl --> Test: 200 OK
deactivate EmpresaCtrl

Test -> EmpresaCtrl: PUT /api/empresas/1 [USER]
activate EmpresaCtrl
EmpresaCtrl -> Security: Verificar rol
Security --> EmpresaCtrl: Rol no autorizado
EmpresaCtrl --> Test: 403 Forbidden
deactivate EmpresaCtrl

== RF-05: Eliminar Empresa ==

Test -> EmpresaCtrl: DELETE /api/empresas/1 [ADMIN]
activate EmpresaCtrl
EmpresaCtrl -> EmpresaSvc: deleteEmpresaById(1L)
EmpresaSvc --> EmpresaCtrl: Operación exitosa
EmpresaCtrl --> Test: 200 OK
deactivate EmpresaCtrl

Test -> EmpresaCtrl: DELETE /api/empresas/1 [USER]
activate EmpresaCtrl
EmpresaCtrl -> Security: Verificar rol
Security --> EmpresaCtrl: Rol no autorizado
EmpresaCtrl --> Test: 403 Forbidden
deactivate EmpresaCtrl

@enduml