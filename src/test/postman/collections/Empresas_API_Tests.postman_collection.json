{
	"info": {
		"_postman_id": "ad8c6094-4e41-4f54-8a1d-6ed27c80938d",
		"name": "Empresas API Tests",
		"description": "StartFragmentara endpoints de empresasEndFragment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15721088"
	},
	"item": [
		{
			"name": "Get All Empresas (User)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is a paginated object\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    // Verificar estructura de paginación\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData).to.have.property('pageNumber');\r",
							"    pm.expect(jsonData).to.have.property('pageSize');\r",
							"    pm.expect(jsonData).to.have.property('totalElements');\r",
							"    pm.expect(jsonData).to.have.property('totalPages');\r",
							"    \r",
							"    // Verificar que hay contenido\r",
							"    pm.expect(jsonData.content).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/empresas?page=0&size=10&sort=nombre,asc",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"empresas"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sort",
							"value": "nombre,asc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Empresas (Admin)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is a paginated object\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    // Verificar estructura de paginación\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData).to.have.property('pageNumber');\r",
							"    pm.expect(jsonData).to.have.property('pageSize');\r",
							"    pm.expect(jsonData).to.have.property('totalElements');\r",
							"    pm.expect(jsonData).to.have.property('totalPages');\r",
							"    \r",
							"    // Verificar que hay contenido\r",
							"    pm.expect(jsonData.content).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/empresas?page=0&size=10&sort=nombre,asc",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"empresas"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sort",
							"value": "nombre,asc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Empresa (Admin)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response contains empresa data\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.nombre).to.eql(\"Nueva Admin Empresa Test\");\r",
							"    \r",
							"    // Guardar ID para otras peticiones\r",
							"    pm.environment.set(\"nueva_admin_empresa_id\", jsonData.id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Nueva Admin Empresa Test\",\r\n  \"correo\": \"admin@empresatest.com\",\r\n  \"telefono\": \"912345678\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/empresas",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"empresas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Empresa With Candidatura (User)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response contains empresa id\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.nombre).to.eql(\"Empresa Test User\");\r",
							"    \r",
							"    // Guardar ID para otras peticiones\r",
							"    pm.environment.set(\"empresa_id\", jsonData.id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Empresa Test User\",\r\n  \"correo\": \"contacto@empresatest.com\",\r\n  \"telefono\": \"912345678\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/empresas/crear-con-candidatura",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"empresas",
						"crear-con-candidatura"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Empresa By ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response contains correct empresa\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"empresa_id\"));\r",
							"    pm.expect(jsonData.nombre).to.eql(\"Empresa Test User\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/empresas/{{empresa_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"empresas",
						"{{empresa_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Empresa (User)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response contains updated data\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.nombre).to.eql(\"Empresa Test Updated\");\r",
							"    pm.expect(jsonData.correo).to.eql(\"updated@empresatest.com\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Empresa Test Updated\",\r\n  \"correo\": \"updated@empresatest.com\",\r\n  \"telefono\": \"912345678\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/empresas/{{empresa_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"empresas",
						"{{empresa_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Empresas With Users (Admin only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response contains empresas with users info\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array');\r",
							"    // Si hay elementos, verificar la estructura\r",
							"    if (jsonData.length > 0) {\r",
							"        pm.expect(jsonData[0]).to.have.property('id');\r",
							"        pm.expect(jsonData[0]).to.have.property('nombre');\r",
							"        pm.expect(jsonData[0]).to.have.property('usuariosAsociados');\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/empresas/with-users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"empresas",
						"with-users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Empresa By Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response contains matching empresas\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    // Verificar estructura de paginación\r",
							"    pm.expect(jsonData).to.have.property('content');\r",
							"    pm.expect(jsonData).to.have.property('pageNumber');\r",
							"    pm.expect(jsonData).to.have.property('totalElements');\r",
							"    \r",
							"    // Verificar que todas las empresas contienen \"Test\" en el nombre\r",
							"    pm.expect(jsonData.content).to.be.an('array');\r",
							"    jsonData.content.forEach(function(empresa) {\r",
							"        pm.expect(empresa.nombre.toLowerCase()).to.include('test');\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/empresas/buscar?nombre=Test&page=0&size=10&sort=nombre,asc",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"empresas",
						"buscar"
					],
					"query": [
						{
							"key": "nombre",
							"value": "Test"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sort",
							"value": "nombre,asc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Empresa (Admin) Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response contains empresa data\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.nombre).to.eql(\"Nueva Admin Empresa Test Delete\");\r",
							"    \r",
							"    // Guardar ID para otras peticiones\r",
							"    pm.environment.set(\"nueva_admin_empresa_id_delete\", jsonData.id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Nueva Admin Empresa Test Delete\",\r\n  \"correo\": \"admin@empresatest.com\",\r\n  \"telefono\": \"912345678\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/empresas",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"empresas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Empresa (Admin only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function() {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/empresas/{{nueva_admin_empresa_id_delete}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"empresas",
						"{{nueva_admin_empresa_id_delete}}"
					]
				}
			},
			"response": []
		}
	]
}